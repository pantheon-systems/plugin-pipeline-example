name: Lint and Test
on: push
jobs:
  lint-test:
    runs-on: ubuntu-latest
    name: Lint & Test
    env:
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost
    steps:
      - uses: actions/checkout@v3
      - name: Install NPM & Composer dependencies
        run: |
          composer install
          npm install
      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE IF NOT EXISTS wordpress_test;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
      - name: Install WP Unit tests
        run: |
          php -v
          mysqladmin -V
          bash .bin/install-wp-tests.sh wordpress_test root root localhost latest true
      - name: Run linter
        run: composer lint
      - name: Run tests
        run: composer test
  wporg-code-analysis:
    runs-on: ubuntu-latest
    name: WP.org Code Analysis
    steps:
      - name: Checkout WP.org Code Analysis
        uses: actions/checkout@v3
        with:
          repository: WordPress/wporg-code-analysis
          ref: trunk
          path: wporg-code-analysis
      - name: Checkout Plugin
        uses: actions/checkout@v3
        with:
          repository: pantheon-systems/plugin-pipeline-example
          ref: ${{ github.event.pull_request.head.sha }}
      - name: WP.org Code Analysis
        run: |
          path=$(pwd)
          ls /home/runner/work/plugin-pipeline-example/
          echo "WP.org Code Analysis is installed to /home/runner/work/plugin-pipeline-example/plugin-pipeline-example/wporg-code-analysis. cd'ing there..."
          cd /home/runner/work/plugin-pipeline-example/plugin-pipeline-example/wporg-code-analysis
          echo "Setting up WP.org Code Analysis"
          composer install -n
          vendor/bin/phpcs -s -v --standard=MinimalPluginStandard --ignore=wporg-code-analysis/* --report=summary $path
  phpcompatibility:
    runs-on: ubuntu-latest
    name: PHP Compatibility
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: echo "Note these tests may be incomplete for newer PHP version and miss some deprecations"
        shell: bash
      - name: PHPCompatibility
        # using @dev because PHPCompatibility ^9 does not yet have the
        # sniffers for 8.0+ but main branch does
        uses: pantheon-systems/phpcompatibility-action@dev
        with:
          test-versions: 8.0-